@model IEnumerable<WebApp.Models.Movies.Movie>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Budget)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Homepage)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Overview)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Popularity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ReleaseDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Revenue)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Runtime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MovieStatus)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Tagline)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.VoteAverage)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.VoteCount)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model) {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Title)</td>
                <td>@Html.DisplayFor(modelItem => item.Budget)</td>
                <td>@Html.DisplayFor(modelItem => item.Homepage)</td>
                <td>@Html.DisplayFor(modelItem => item.Overview)</td>
                <td>@Html.DisplayFor(modelItem => item.Popularity)</td>
                <td>@Html.DisplayFor(modelItem => item.ReleaseDate)</td>
                <td>@Html.DisplayFor(modelItem => item.Revenue)</td>
                <td>@Html.DisplayFor(modelItem => item.Runtime)</td>
                <td>@Html.DisplayFor(modelItem => item.MovieStatus)</td>
                <td>@Html.DisplayFor(modelItem => item.Tagline)</td>
                <td>@Html.DisplayFor(modelItem => item.VoteAverage)</td>
                <td>@Html.DisplayFor(modelItem => item.VoteCount)</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.MovieId">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.MovieId">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.MovieId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<nav>
    <ul class="pagination">
        <!-- First Page -->
        <li class="page-item @(ViewData["CurrentPage"].ToString() == "1" ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { page = 1, size = ViewData["PageSize"] })">First</a>
        </li>

        <!-- Previous Page -->
        <li class="page-item @(ViewData["CurrentPage"].ToString() == "1" ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { page = Math.Max((int)ViewData["CurrentPage"] - 1, 1), size = ViewData["PageSize"] })">Previous</a>
        </li>

        <!-- Page Numbers -->
        @for (int i = Math.Max(1, (int)ViewData["CurrentPage"] - 2); i <= Math.Min((int)ViewData["CurrentPage"] + 2, (int)ViewData["TotalPages"]); i++)
        {
            <li class="page-item @(ViewData["CurrentPage"].ToString() == i.ToString() ? "active" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = i, size = ViewData["PageSize"] })">@i</a>
            </li>
        }

        <!-- Next Page -->
        <li class="page-item @(ViewData["CurrentPage"].ToString() == ViewData["TotalPages"].ToString() ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { page = Math.Min((int)ViewData["CurrentPage"] + 1, (int)ViewData["TotalPages"]), size = ViewData["PageSize"] })">Next</a>
        </li>

        <!-- Last Page -->
        <li class="page-item @(ViewData["CurrentPage"].ToString() == ViewData["TotalPages"].ToString() ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { page = (int)ViewData["TotalPages"], size = ViewData["PageSize"] })">Last</a>
        </li>
    </ul>
</nav>
